{"version":3,"sources":["components/base/template.js","components/base/webcomponent.js","components/dropdown/dropdown.js","index.js"],"names":["Template","template","document","createElement","Object","style","immutableStyle","html","immutableHtml","attributes","render","name","content","cloneNode","that","matcher","test","newHtml","replace","$match","$open","$attribute","$close","updateAttributePlaceholders","innerHTML","WebComponent","HTMLElement","Error","mode","setAttributes","_shadowRoot","attachShadow","appendChild","getCloned","onConnect","onDisconnect","oldValue","newValue","newAttributes","_updateDataElement","onAttributeChanged","onAdopted","value","el","querySelector","element","window","customElements","define","_DropDownTemplate","context","options","toggleBackground","toggleText","menuBorder","menuBackground","menuText","menuHoverBackground","menuHoverText","setStyle","setHtml","getAttribute","DropDown","_setIcon","setTemplate","setMode","console","log","_id","_toggleTrigger","_mouseOnElement","$dropDown","$dropDownToggle","$dropDownMenu","_loadMenuItems","addEventListener","_handleMouseOver","bind","_handleMouseOut","_toggleOpen","oldVal","newVal","event","force","classList","toggle","e","stopPropagation","icon","length","setAttribute","items","querySelectorAll","item","onclick","className","href","addCustomElement","require"],"mappings":"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","file":"web-com-test.1403df14.js","sourceRoot":"..","sourcesContent":["class Template extends Object {\n    constructor() {\n        super();\n        this.template = document.createElement('template');\n        return this;\n    }\n    setStyle(style) {\n        this.style = style;\n        this.immutableStyle = style;\n        return this;\n    }\n    setHtml(html) {\n        if (typeof html == 'string') {\n            this.html = html;\n            this.immutableHtml = html;\n        } else if (typeof html == 'function') {\n            this.html = html();\n            this.immutableStyle = this.html;\n        }\n        return this;\n    }\n    setAttributes(attributes) {\n        if (typeof attributes == 'object') {\n            // Merge attributes\n            this.attributes = { ...this.attributes, ...attributes };\n            this.render();\n        }\n    }\n    getAttribute(name) {\n        return this.attributes[name] || null;\n    }\n    getTemplate() {\n        return this.template;\n    }\n    getCloned() {\n        return this.template.content.cloneNode(true);\n    }\n    updateAttributePlaceholders() {\n        const that = this;\n        const matcher = /({{)([a-zA-Z0-9\\-_]*)(}})/gi;\n        if (that.attributes) {\n            if (matcher.test(this.immutableHtml)) {\n                const newHtml = this.immutableHtml.replace(matcher, function ($match, $open, $attribute, $close) {\n                    return that.attributes[$attribute];\n                });\n                this.html = newHtml;\n            }\n        }\n\n    }\n    render() {\n        this.updateAttributePlaceholders();\n        this.template.innerHTML = `<style>${this.style}</style>${this.html}`;\n        return this;\n    }\n}\nexport default Template;","import Template from \"./template\";\n\nclass WebComponent extends HTMLElement {\n    /**\n     * Set Template\n     *\n     * @description Set the Template object that will be used for the component. This lets us isolate the\n     *              composition of the template outside of the component logic.\n     * @param {Template} template Instance of Template class.\n     * @return {WebComponent} Returns self for method chaining.\n     */\n    setTemplate(template) {\n\n        // Ensure valid template instance\n        if (!template instanceof Template) {\n            throw Error('Template must be an instance of the Template class!');\n        }\n\n        // Assign template locally\n        this.template = template;\n\n        return this;\n    }\n    /**\n     * Set Template\n     *\n     * @description Set the shadow DOM mode to open or closed. This is not necessary to call if you are ok with an\n     *              open mode (highly recommended).\n     * @param {String} mode Either \"open\" or \"closed\"\n     * @return {WebComponent} Returns self for method chaining.\n     */\n    setMode(mode) {\n\n        // Ensure valid mode\n        if (mode !== \"open\" && mode !== \"closed\") {\n            throw Error('Invalid shadom mode set. Expecting \"open\" or \"closed\".');\n        }\n\n        // Assign mode locally\n        this.mode = mode;\n\n        return this;\n    }\n\n    /**\n     * Set Attributes\n     *\n     * @description Set or update attributes in the Template instance.\n     * @param {Object} attributes\n     */\n    setAttributes(attributes) {\n\n        // Pass attributes to the template\n        if (this.template instanceof Template) {\n            this.template.setAttributes(attributes);\n        }\n\n        // Method chaining\n        return this;\n    }\n\n    /**\n     * Connected Callback\n     *\n     * @description Called when the custom component connects to the DOM. If component inheriting this class\n     *              implements an onConnect() method, we will call it.\n     */\n    connectedCallback() {\n\n        // Ensure we have a template\n        if (!this.template instanceof Template) {\n            throw Error('Cannot append template to shadow. Please use setTemplate() in the constructor!');\n        }\n\n        // Attach component to shadow DOM and append the template\n        this._shadowRoot = this.attachShadow({ \"mode\": (this.mode || \"open\") });\n        this._shadowRoot.appendChild(this.template.getCloned());\n\n        // Call the component's own connectedCallback handler\n        if (typeof this.onConnect == 'function') {\n            return this.onConnect();\n        }\n    }\n\n    /**\n     * Disconnected Callback\n     *\n     * @description Called when the custom component disconnects from the DOM. If component inheriting this class\n     *              implements an onDisconnect() method, we will call it.\n     */\n    disconnectedCallback() {\n        // Call the component's own disconnectedCallback handler\n        if (typeof this.onDisconnect == 'function') {\n            return this.onDisconnect();\n        }\n    }\n\n    /**\n     * Attribute Changed Callback\n     *\n     * @description Automatic callback in web components when an observed attribute is modified as defined in the\n     *              \"static get observedAttributes()\" method on the component. We take the new attribute and pass\n     *              it on to the template. If an element contains a data attribute with a matching name, we will\n     *              automatically update the value within the shadow DOM. Finally, if the component inheriting this\n     *              class implements an onAttributeChanged method, we call it with the values as well.\n     * @param {String} name Name of the attribute\n     * @param {String} oldValue Previous value of the attribute\n     * @param {String} newValue New value of the attribute\n     */\n    attributeChangedCallback(name, oldValue, newValue) {\n\n        // Pass updated attribute to template\n        const newAttributes = {};\n        newAttributes[name] = newValue;\n        this.setAttributes(newAttributes);\n\n        // If a data-* selector exists, update the value\n        this._updateDataElement(name, newValue);\n\n        // Call downstream callback\n        if (typeof this.onAttributeChanged == 'function') {\n            return this.onAttributeChanged(name, oldValue, newValue);\n        }\n    }\n\n    /**\n     * Adopted Callback\n     *\n     * @description Called when the custom element is moved from on HTML document to another (such as an iframe)\n     *              using the adoptNode() method. Only used in a multi-document context. If the component iheriting\n     *              this class implements an onAdopted() method, we will call it.\n     */\n    adoptedCallback() {\n        if (typeof this.onAdopted == 'function') {\n            return this.onAdopted();\n        }\n    }\n\n    /**\n     * Update element with data attribute\n     *\n     * @param {String} name Name of the data-* attribute\n     * @param {Mixed} value Value to set in the inner HTML\n     */\n    _updateDataElement(name, value) {\n        // Only update if the shadow root has been defined\n        if (this._shadowRoot) {\n            const el = this._shadowRoot.querySelector('[data-' + name + ']');\n            if (el) {\n                el.innerHTML = value;\n            }\n        }\n    }\n\n    /**\n     * Add Custom Element\n     *\n     * @static\n     * @description Wrapper around addition of custom elements to the window\n     * @param {String} name Name of custom component. Must be lowercase with a hyphen.\n     * @param {HTMLElement} element The custom component class\n     */\n    static addCustomElement(name, element) {\n        window.customElements.define(name, element);\n    }\n}\n\nexport default WebComponent;","import Template from '../base/template';\nimport WebComponent from '../base/webcomponent';\n\n/**\n * Build Template\n *\n * Wrap template build inside a function so we can pass the component context through\n * @param {WebComponent}\n */\nconst _DropDownTemplate = function (context) {\n\n    const options = {\n        toggleHeight: \"4.7rem\",\n        menuHeight: \"4.8rem\", // Account for borders\n        colors: {\n            toggleBackground: '#335E7A', // SLATE D1\n            toggleText: '#FFFFFF', // WHITE\n            menuBorder: '#EAEEF1', // MYSTICK GREY L3\n            menuBackground: '#F6F8FA', // MYSTICK GREY L2\n            menuText: '#335E7A', // SLATE D1\n            menuHoverBackground: '#EAEEF1', // MYSTICK GREY L3\n            menuHoverText: '#335E7A', // SLATE D1\n        }\n    };\n\n    return new Template(context)\n        .setStyle(/*css*/`\n            *, *:after {\n                box-sizing: border-box;\n            }\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: auto;\n                padding: 0rem;\n                border: 0px;\n            }\n            :host([hidden]) { display: none }\n            .ux-dropdown {\n                display: flex;\n                flex-direction: column;\n                position: relative;\n                width: 100%;\n            }\n            .ux-dropdown__toggle {\n                display: flex;\n                flex-direction: row;\n                width: 100%;\n                padding: 0rem;\n                background-color: ${options.colors.toggleBackground};\n                color: ${options.colors.toggleText};\n                border: 1px solid ${options.colors.toggleBackground};\n                height: ${options.toggleHeight};\n            }\n            .ux-dropdown__toggle__label {\n                display: inline-block;\n                width: 90%;\n                color: ${options.colors.toggleText};\n                margin: 0.8rem;\n                line-height: 3rem;\n            }\n            .ux-dropdown__toggle:hover {\n                cursor: pointer;\n            }\n            .ux-dropdown__toggle__icon {\n                display: inline-block;\n                width: 30px; /* Fixed width image can rotate centered */\n                text-align: right;\n                color: ${options.colors.toggleText};\n                margin: 0.8rem;\n                -webkit-transform:rotate(-360deg);\n                -moz-transform: rotate(-360deg);\n                -ms-transform: rotate(-360deg);\n                -o-transform: rotate(-360deg);\n                transform: rotate(-360deg);\n                transition: transform 150ms ease;\n            }\n            .ux-dropdown__toggle__icon svg {\n                fill: ${options.colors.toggleText};\n                max-height: 3rem;\n            }\n            .ux-dropdown--open .ux-dropdown__toggle__icon {\n                -webkit-transform:rotate(-180deg);\n                -moz-transform: rotate(-180deg);\n                -ms-transform: rotate(-180deg);\n                -o-transform: rotate(-180deg);\n                transform: rotate(-180deg);\n                transition: transform 150ms ease;\n            }\n            .ux-dropdown__menu {\n                display: flex;\n                flex-direction: column;\n                overflow: hidden;\n                position: absolute;\n                top: ${options.toggleHeight};\n                width: 100%;\n                padding: 0rem;\n                border-width: 0px;\n                max-height: 0;\n                visibility: hidden;\n                -webkit-animation: slideUp 0.3s ease-out forwards;\n                -moz-animation: slideUp 0.3s ease-out forwards;\n                -o-animation: slideUp 0.3s ease-out forwards;\n                animation: slideUp 0.3s ease-out forwards;\n            }\n            .ux-dropdown--open > .ux-dropdown__menu {\n                overflow: initial;\n                z-index: 10000;\n                visibility: visible;\n                overflow-y: hidden;\n                box-shadow: 0px 3px 5px 0px rgba(40,40,40,0.2);\n                -webkit-animation: slideDown 10s ease-out forwards;\n                -moz-animation: slideDown 10s ease-out forwards;\n                -o-animation: slideDown 10s ease-out forwards;\n                animation: slideDown 10s ease-out forwards;\n            }\n            .ux-dropdown__menu__item {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                background-color: ${options.colors.menuBackground};\n                color: ${options.colors.menuText};\n                list-style: none;\n                margin: 0rem;\n                padding: 0rem;\n            }\n            .ux-dropdown__menu__item:hover {\n                background-color: ${options.colors.menuHoverBackground};\n                color: ${options.colors.menuHoverText};\n                cursor: pointer;\n            }\n            .ux-dropdown__menu__divider {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                background-color: ${options.colors.menuBackground};\n                color: ${options.colors.menuText};\n                list-style: none;\n                margin: 0rem;\n                padding: 0rem;\n            }\n            .ux-dropdown__menu__divider hr {\n                border: 1px solid transparent;\n                border-top: 1px solid ${options.colors.menuBorder};\n                height: 1px;\n                width: 100%;\n                margin: 0rem;\n            }\n            .ux-dropdown__menu__item span,\n            .ux-dropdown__menu__item a {\n                margin: 0.8rem;\n            }\n            .ux-dropdown__menu__item a,\n            .ux-dropdown__menu__item a:hover,\n            .ux-dropdown__menu__item a:visited,\n            .ux-dropdown__menu__item a:active {\n                text-decoration: none;\n                color: ${options.colors.menuText};\n            }\n            @keyframes slideDown {\n                from {\n                    max-height: 0;\n                }\n                to {\n                    max-height: 5000px;\n                }\n            }\n            @keyframes slideUp {\n                from {\n                    max-height: 5000px;\n                }\n                to {\n                    max-height: 0px;\n                }\n            }\n        `)\n        .setHtml(/*html*/`\n            <div class=\"ux-dropdown\">\n                <div class=\"ux-dropdown__toggle\">\n                    <div class=\"ux-dropdown__toggle__label\" data-label>\n                        ${context.getAttribute('label')}\n                    </div>\n                    <div class=\"ux-dropdown__toggle__icon\" data-icon>\n                        ${(context.getAttribute('icon') == \"false\" ? \"\" : context.getAttribute('icon'))}\n                    </div>\n                </div>\n                <div class=\"ux-dropdown__menu\"></div>\n            </div>\n        `);\n\n};\n\nclass DropDown extends WebComponent {\n    /**\n     * Attributes MUST be set here in order to use within components onAttributeChanged event\n     */\n    static get observedAttributes() {\n        return [\n            'id',\n            'label',\n            'icon',\n            'trigger'\n        ];\n    }\n    /**\n     * Initialize Component\n     *\n     * @description We setup the dynamic icon, initialize the template, set the component mode, and then\n     *              render the template content with dynamic contextual parameters.\n     */\n    constructor() {\n        //Parent initialization\n        super();\n\n        // Dynamically set the icon\n        this._setIcon(this.getAttribute('icon'));\n\n        // Set the template instance to be used with component. We pass this component to the template for\n        // variable context, which allows for dynamic templating.\n        this.setTemplate(_DropDownTemplate(this));\n\n        // Set the default mode of the component to open. There is almost never a reason to use \"closed\".\n        this.setMode(\"open\");\n\n        // Make the template render with it's context\n        this.template.render();\n    }\n\n    /**\n     * On Connect\n     *\n     * @description This is a callback from the parent when \"connectedCallback\" is called. The WebComponent we extend\n     *              handles the initialization of the template and attaches the shadow DOM for us. Here we want to\n     *              get element references, load the menu items, and setup event listeners.\n     */\n    onConnect() {\n        console.log('[COMPONENT_NOTICE] <drop-down> component connected.');\n\n        // Init\n        this._id = this.getAttribute('id');\n        this._toggleTrigger = this.getAttribute('trigger');\n        this._mouseOnElement = false;\n\n        // Store Element References\n        this.$dropDown = this._shadowRoot.querySelector('.ux-dropdown');\n        this.$dropDownToggle = this._shadowRoot.querySelector('.ux-dropdown__toggle');\n        this.$dropDownMenu = this._shadowRoot.querySelector('.ux-dropdown__menu');\n\n        // Load items\n        this._loadMenuItems();\n\n        // Set open close handler based on the trigger mode: \"click\" or \"hover\". Click is default.\n        if (this._toggleTrigger == \"hover\") {\n            this.$dropDown.addEventListener('mouseover', this._handleMouseOver.bind(this));\n            this.$dropDown.addEventListener('mouseout', this._handleMouseOut.bind(this));\n        } else {\n            this.$dropDownToggle.addEventListener('click', this._toggleOpen.bind(this));\n        }\n    }\n\n    /**\n     * On Disconnect\n     *\n     * @description This is a callback from the parent when \"disconnectedCallback\" is called. We can perform any \n     *              cleanup we need to do here.\n     */\n    onDisconnect() {\n        console.log('[COMPONENT_NOTICE] <drop-down> component disconnected.');\n    }\n\n    /**\n     * On Attribute Changed\n     *\n     * @description This is a callback from the parent when \"attributeChangedCallback\" is called. The parent\n     *              WebComponent class handles notifying the template of attribute updates and any dynamic\n     *              updates by using data-* attributes matching the attribute name.\n     */\n    onAttributeChanged(name, oldVal, newVal) {\n        console.log(`[COMPONENT_NOTICE] <drop-down> component attribtute changed: ${name} changed from \"${oldVal}\" to \"${newVal}\"`);\n    }\n\n    /**\n     * On Adopted\n     *\n     * @description This is a callback from the parent when \"adoptedCallback\" is called. This occurs when component\n     *              moves to another document, such as an iframe, using adoptNode(). This is not a common behavior\n     *              and handling this method within your component is often unnecessary.\n     */\n    onAdopted() {\n        console.log('[COMPONENT_NOTICE] <drop-down> component adopted.');\n    }\n\n    /**\n     * Toggle Menu Class to Open Menu\n     *\n     * @description Toggle the CSS class on the dropdown in order to open/close the menu.\n     * @param {Event} event\n     * @param {Boolean} force An option to force the toggle despite mouse position\n     */\n    _toggleOpen(event, force) {\n        if (force) {\n            this._mouseOnElement = false;\n        }\n        this.$dropDown.classList.toggle('ux-dropdown--open');\n    }\n\n    _handleMouseOver(e) {\n        e.stopPropagation();\n        if (this._mouseOnElement === false) {\n            this._mouseOnElement = true;\n            this._toggleOpen();\n        }\n    }\n\n    _handleMouseOut(e) {\n        e.stopPropagation();\n        if (this._mouseOnElement === true) {\n            this._mouseOnElement = false;\n            this._toggleOpen();\n        }\n    }\n\n    /**\n     * Set Toggle Icon\n     *\n     * @param {String} icon An image path, \"false\" to disable, or empty to default to chevron\n     */\n    _setIcon(icon) {\n\n        // No icon option\n        if (icon === false || icon === \"false\") {\n            return;\n        }\n\n        // Image source option\n        if (typeof icon === 'string' && icon.length > 1) {\n            this.setAttribute('icon', `\n                <img src=\"${icon}\" alt=\"Toggle Dropdown\" width=\"30px\" />\n            `);\n            return;\n        }\n\n        // Default option -- uses SVG chevron that Google Material UI uses\n        this.setAttribute('icon', `\n            <svg\n                focusable=\"false\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n            >\n                <path d=\"M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"></path>\n            </svg>\n        `);\n    }\n\n    /**\n     * Load Menu Items\n     *\n     * @description Pull in the elements inside the <drop-down> and initialize them as menu items.\n     */\n    _loadMenuItems() {\n        // IMPORTANT NOTE: A unique ID is REQUIRED to be placed as an attribute on the component\n        // or loading the menu items will not work correctly!\n        const items = document.querySelectorAll(`drop-down[id=\"${this._id}\"] > *`);\n        if (items.length > 0) {\n            for (const item of items) {\n\n                // Set handler to close dropdown when item is selected\n                const that = this;\n                item.onclick = function (event) {\n                    that._toggleOpen(event, true);\n                    return event;\n                }\n\n                if (item.getAttribute('type') === \"divider\") {\n                    // Divider type\n                    item.className = \"ux-dropdown__menu__item ux-dropdown__menu__divider\";\n                    item.innerHTML = \"<hr />\";\n                } else if (item.getAttribute('type') === \"link\") {\n                    // Link type\n                    let href = item.getAttribute('href');\n                    item.className = \"ux-dropdown__menu__item\";\n                    item.innerHTML = \"<a href=\\\"\" + href + \"\\\">\" + item.innerHTML + \"</a>\";\n                } else {\n                    item.className = \"ux-dropdown__menu__item\";\n                    item.innerHTML = \"<span>\" + item.innerHTML + \"</span>\";\n                }\n\n                this.$dropDownMenu.appendChild(item);\n\n            }\n        } else {\n            console.log('[COMPONENT_ERROR] <drop-down> component cannot initialize with empty items.');\n        }\n    }\n}\n\nWebComponent.addCustomElement('drop-down', DropDown);","require('./components/dropdown/dropdown');\nconsole.log('loaded index');"]}